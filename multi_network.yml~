apiVersion: v1
kind: ConfigMap
metadata:
  name: mc3-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log	/var/log/nginx/access.log main;
      server { 
          listen       80;
          server_name  _;
          location / {
              root   html;
              index  index.html index.htm;
          }
      }
      include /etc/nginx/virtualhost/virtualhost.conf;
    }

    upstream app {
      server 127.0.0.1:5000;
    }
    server {
      listen 80;
      root /usr/local/app;
      access_log /var/log/nginx/app.access_log main;
      error_log /var/log/nginx/app.error_log;
      location / {
        proxy_pass http://webapp/;
        proxy_redirect off;
      }
    }
---
apiVersion: v1
kind: Pod
metadata:
  name: mc3
  labels:
    app: mc3
spec:
      containers:
      - name: webapp
        image: training/webapp
      - name: nginx
        image: nginx:alpine  
        ports:
        - containerPort: 80
        volumeMounts:
        -   name: nginx-proxy-config
            mountPath: /etc/nginx/nginx.conf # mount nginx-conf volumn to /etc/nginx
            subPath: nginx.conf
      volumes:
      - name: nginx-proxy-config
        configMap:
          name: mc3-nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
